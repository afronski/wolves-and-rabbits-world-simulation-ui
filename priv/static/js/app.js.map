{"version":3,"sources":["node_modules/phoenix/priv/static/phoenix.js","node_modules/phoenix_html/priv/static/phoenix_html.js","app.js","board.js","events-list.js"],"names":[],"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","file":"priv/static/js/app.js","sourcesContent":["\nrequire.register(\"phoenix/priv/static/phoenix.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"phoenix\");\n  (function() {\n    (function(exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are mulitplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket(\"/ws\", {params: {userToken: \"123\"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here's an example chat room example where `\"new_msg\"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel(\"rooms:123\", {token: roomToken})\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n//     $input.onEnter( e => {\n//       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n//        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n//     })\n//     channel.join()\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n//       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n//\n//\n// ## Joining\n//\n// Creating a channel with `socket.channel(topic, params)`, binds the params to\n// `channel.params`, which are sent up on `channel.join()`.\n// Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an \"ok\" status, while unsuccessful joins\n// receive \"error\".\n//\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting. The default timeout is 5000ms.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\n//     socket.onClose( () => console.log(\"the connection dropped\") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log(\"there was an error!\") )\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attemtped\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n\nvar VSN = \"1.0.0\";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 10000;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\n\nvar Push = function () {\n\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `\"phx_join\"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n\n  function Push(channel, event, payload, timeout) {\n    _classCallCheck(this, Push);\n\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || {};\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n\n  _createClass(Push, [{\n    key: \"resend\",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n      this.cancelRefEvent();\n      this.ref = null;\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n      this.send();\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      if (this.hasReceived(\"timeout\")) {\n        return;\n      }\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref\n      });\n    }\n  }, {\n    key: \"receive\",\n    value: function receive(status, callback) {\n      if (this.hasReceived(status)) {\n        callback(this.receivedResp.response);\n      }\n\n      this.recHooks.push({ status: status, callback: callback });\n      return this;\n    }\n\n    // private\n\n  }, {\n    key: \"matchReceive\",\n    value: function matchReceive(_ref) {\n      var status = _ref.status;\n      var response = _ref.response;\n      var ref = _ref.ref;\n\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: \"cancelRefEvent\",\n    value: function cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: \"cancelTimeout\",\n    value: function cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n  }, {\n    key: \"startTimeout\",\n    value: function startTimeout() {\n      var _this = this;\n\n      if (this.timeoutTimer) {\n        return;\n      }\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n\n      this.channel.on(this.refEvent, function (payload) {\n        _this.cancelRefEvent();\n        _this.cancelTimeout();\n        _this.receivedResp = payload;\n        _this.matchReceive(payload);\n      });\n\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger(\"timeout\", {});\n      }, this.timeout);\n    }\n  }, {\n    key: \"hasReceived\",\n    value: function hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(status, response) {\n      this.channel.trigger(this.refEvent, { status: status, response: response });\n    }\n  }]);\n\n  return Push;\n}();\n\nvar Channel = exports.Channel = function () {\n  function Channel(topic, params, socket) {\n    var _this2 = this;\n\n    _classCallCheck(this, Channel);\n\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = params || {};\n    this.socket = socket;\n    this.bindings = [];\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.rejoinTimer = new Timer(function () {\n      return _this2.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive(\"ok\", function () {\n      _this2.state = CHANNEL_STATES.joined;\n      _this2.rejoinTimer.reset();\n      _this2.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n      _this2.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this2.socket.log(\"channel\", \"close \" + _this2.topic);\n      _this2.state = CHANNEL_STATES.closed;\n      _this2.socket.remove(_this2);\n    });\n    this.onError(function (reason) {\n      _this2.socket.log(\"channel\", \"error \" + _this2.topic, reason);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive(\"timeout\", function () {\n      if (_this2.state !== CHANNEL_STATES.joining) {\n        return;\n      }\n\n      _this2.socket.log(\"channel\", \"timeout \" + _this2.topic, _this2.joinPush.timeout);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this2.trigger(_this2.replyEventName(ref), payload);\n    });\n  }\n\n  _createClass(Channel, [{\n    key: \"rejoinUntilConnected\",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: \"join\",\n    value: function join() {\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n      if (this.joinedOnce) {\n        throw \"tried to join multiple times. 'join' can only be called a single time per channel instance\";\n      } else {\n        this.joinedOnce = true;\n      }\n      this.rejoin(timeout);\n      return this.joinPush;\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.bindings.push({ event: event, callback: callback });\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: \"canPush\",\n    value: function canPush() {\n      return this.socket.isConnected() && this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: \"push\",\n    value: function push(event, payload) {\n      var timeout = arguments.length <= 2 || arguments[2] === undefined ? this.timeout : arguments[2];\n\n      if (!this.joinedOnce) {\n        throw \"tried to push '\" + event + \"' to '\" + this.topic + \"' before joining. Use channel.join() before pushing events\";\n      }\n      var pushEvent = new Push(this, event, payload, timeout);\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n\n      return pushEvent;\n    }\n\n    // Leaves the channel\n    //\n    // Unsubscribes from server events, and\n    // instructs channel to terminate on server\n    //\n    // Triggers onClose() hooks\n    //\n    // To receive leave acknowledgements, use the a `receive`\n    // hook to bind to the server ack, ie:\n    //\n    //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n    //\n\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      var _this3 = this;\n\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n      var onClose = function onClose() {\n        _this3.socket.log(\"channel\", \"leave \" + _this3.topic);\n        _this3.trigger(CHANNEL_EVENTS.close, \"leave\");\n      };\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive(\"ok\", function () {\n        return onClose();\n      }).receive(\"timeout\", function () {\n        return onClose();\n      });\n      leavePush.send();\n      if (!this.canPush()) {\n        leavePush.trigger(\"ok\", {});\n      }\n\n      return leavePush;\n    }\n\n    // Overridable message hook\n    //\n    // Receives all events for specialized message handling\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event, payload, ref) {}\n\n    // private\n\n  }, {\n    key: \"isMember\",\n    value: function isMember(topic) {\n      return this.topic === topic;\n    }\n  }, {\n    key: \"sendJoin\",\n    value: function sendJoin(timeout) {\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: \"rejoin\",\n    value: function rejoin() {\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n      this.sendJoin(timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(triggerEvent, payload, ref) {\n      this.onMessage(triggerEvent, payload, ref);\n      this.bindings.filter(function (bind) {\n        return bind.event === triggerEvent;\n      }).map(function (bind) {\n        return bind.callback(payload, ref);\n      });\n    }\n  }, {\n    key: \"replyEventName\",\n    value: function replyEventName(ref) {\n      return \"chan_reply_\" + ref;\n    }\n  }]);\n\n  return Channel;\n}();\n\nvar Socket = exports.Socket = function () {\n\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\n  //                                               \"wss://example.com\"\n  //                                               \"/ws\" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n\n  function Socket(endPoint) {\n    var _this4 = this;\n\n    var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, Socket);\n\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || window.WebSocket || LongPoll;\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.logger = opts.logger || function () {}; // noop\n    this.longpollerTimeout = opts.longpollerTimeout || 20000;\n    this.params = opts.params || {};\n    this.endPoint = endPoint + \"/\" + TRANSPORTS.websocket;\n    this.reconnectTimer = new Timer(function () {\n      _this4.disconnect(function () {\n        return _this4.connect();\n      });\n    }, this.reconnectAfterMs);\n  }\n\n  _createClass(Socket, [{\n    key: \"protocol\",\n    value: function protocol() {\n      return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n    }\n  }, {\n    key: \"endPointURL\",\n    value: function endPointURL() {\n      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });\n      if (uri.charAt(0) !== \"/\") {\n        return uri;\n      }\n      if (uri.charAt(1) === \"/\") {\n        return this.protocol() + \":\" + uri;\n      }\n\n      return this.protocol() + \"://\" + location.host + uri;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(callback, code, reason) {\n      if (this.conn) {\n        this.conn.onclose = function () {}; // noop\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n        this.conn = null;\n      }\n      callback && callback();\n    }\n\n    // params - The params to send when connecting, for example `{user_id: userToken}`\n\n  }, {\n    key: \"connect\",\n    value: function connect(params) {\n      var _this5 = this;\n\n      if (params) {\n        console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n        this.params = params;\n      }\n      if (this.conn) {\n        return;\n      }\n\n      this.conn = new this.transport(this.endPointURL());\n      this.conn.timeout = this.longpollerTimeout;\n      this.conn.onopen = function () {\n        return _this5.onConnOpen();\n      };\n      this.conn.onerror = function (error) {\n        return _this5.onConnError(error);\n      };\n      this.conn.onmessage = function (event) {\n        return _this5.onConnMessage(event);\n      };\n      this.conn.onclose = function (event) {\n        return _this5.onConnClose(event);\n      };\n    }\n\n    // Logs the message. Override `this.logger` for specialized logging. noops by default\n\n  }, {\n    key: \"log\",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n\n    // Registers callbacks for connection state change events\n    //\n    // Examples\n    //\n    //    socket.onError(function(error){ alert(\"An error occurred\") })\n    //\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n  }, {\n    key: \"onConnOpen\",\n    value: function onConnOpen() {\n      var _this6 = this;\n\n      this.log(\"transport\", \"connected to \" + this.endPointURL(), this.transport.prototype);\n      this.flushSendBuffer();\n      this.reconnectTimer.reset();\n      if (!this.conn.skipHeartbeat) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(function () {\n          return _this6.sendHeartbeat();\n        }, this.heartbeatIntervalMs);\n      }\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"onConnClose\",\n    value: function onConnClose(event) {\n      this.log(\"transport\", \"close\", event);\n      this.triggerChanError();\n      clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: \"onConnError\",\n    value: function onConnError(error) {\n      this.log(\"transport\", error);\n      this.triggerChanError();\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: \"triggerChanError\",\n    value: function triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: \"connectionState\",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return \"connecting\";\n        case SOCKET_STATES.open:\n          return \"open\";\n        case SOCKET_STATES.closing:\n          return \"closing\";\n        default:\n          return \"closed\";\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this.connectionState() === \"open\";\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return !c.isMember(channel.topic);\n      });\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(topic) {\n      var chanParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var chan = new Channel(topic, chanParams, this);\n      this.channels.push(chan);\n      return chan;\n    }\n  }, {\n    key: \"push\",\n    value: function push(data) {\n      var _this7 = this;\n\n      var topic = data.topic;\n      var event = data.event;\n      var payload = data.payload;\n      var ref = data.ref;\n\n      var callback = function callback() {\n        return _this7.conn.send(JSON.stringify(data));\n      };\n      this.log(\"push\", topic + \" \" + event + \" (\" + ref + \")\", payload);\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n\n    // Return the next message ref, accounting for overflows\n\n  }, {\n    key: \"makeRef\",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n\n      return this.ref.toString();\n    }\n  }, {\n    key: \"sendHeartbeat\",\n    value: function sendHeartbeat() {\n      if (!this.isConnected()) {\n        return;\n      }\n      this.push({ topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.makeRef() });\n    }\n  }, {\n    key: \"flushSendBuffer\",\n    value: function flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: \"onConnMessage\",\n    value: function onConnMessage(rawMessage) {\n      var msg = JSON.parse(rawMessage.data);\n      var topic = msg.topic;\n      var event = msg.event;\n      var payload = msg.payload;\n      var ref = msg.ref;\n\n      this.log(\"receive\", (payload.status || \"\") + \" \" + topic + \" \" + event + \" \" + (ref && \"(\" + ref + \")\" || \"\"), payload);\n      this.channels.filter(function (channel) {\n        return channel.isMember(topic);\n      }).forEach(function (channel) {\n        return channel.trigger(event, payload, ref);\n      });\n      this.stateChangeCallbacks.message.forEach(function (callback) {\n        return callback(msg);\n      });\n    }\n  }]);\n\n  return Socket;\n}();\n\nvar LongPoll = exports.LongPoll = function () {\n  function LongPoll(endPoint) {\n    _classCallCheck(this, LongPoll);\n\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function () {}; // noop\n    this.onerror = function () {}; // noop\n    this.onmessage = function () {}; // noop\n    this.onclose = function () {}; // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n\n    this.poll();\n  }\n\n  _createClass(LongPoll, [{\n    key: \"normalizeEndpoint\",\n    value: function normalizeEndpoint(endPoint) {\n      return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n    }\n  }, {\n    key: \"endpointURL\",\n    value: function endpointURL() {\n      return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n    }\n  }, {\n    key: \"closeAndRetry\",\n    value: function closeAndRetry() {\n      this.close();\n      this.readyState = SOCKET_STATES.connecting;\n    }\n  }, {\n    key: \"ontimeout\",\n    value: function ontimeout() {\n      this.onerror(\"timeout\");\n      this.closeAndRetry();\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      var _this8 = this;\n\n      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n        return;\n      }\n\n      Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n        if (resp) {\n          var status = resp.status;\n          var token = resp.token;\n          var messages = resp.messages;\n\n          _this8.token = token;\n        } else {\n          var status = 0;\n        }\n\n        switch (status) {\n          case 200:\n            messages.forEach(function (msg) {\n              return _this8.onmessage({ data: JSON.stringify(msg) });\n            });\n            _this8.poll();\n            break;\n          case 204:\n            _this8.poll();\n            break;\n          case 410:\n            _this8.readyState = SOCKET_STATES.open;\n            _this8.onopen();\n            _this8.poll();\n            break;\n          case 0:\n          case 500:\n            _this8.onerror();\n            _this8.closeAndRetry();\n            break;\n          default:\n            throw \"unhandled poll status \" + status;\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(body) {\n      var _this9 = this;\n\n      Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), function (resp) {\n        if (!resp || resp.status !== 200) {\n          _this9.onerror(status);\n          _this9.closeAndRetry();\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.readyState = SOCKET_STATES.closed;\n      this.onclose();\n    }\n  }]);\n\n  return LongPoll;\n}();\n\nvar Ajax = exports.Ajax = function () {\n  function Ajax() {\n    _classCallCheck(this, Ajax);\n  }\n\n  _createClass(Ajax, null, [{\n    key: \"request\",\n    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n      if (window.XDomainRequest) {\n        var req = new XDomainRequest(); // IE8, IE9\n        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n      } else {\n        var req = window.XMLHttpRequest ? new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n        new ActiveXObject(\"Microsoft.XMLHTTP\"); // IE6, IE5\n        this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback);\n      }\n    }\n  }, {\n    key: \"xdomainRequest\",\n    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n      var _this10 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint);\n      req.onload = function () {\n        var response = _this10.parseJSON(req.responseText);\n        callback && callback(response);\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      // Work around bug in IE9 that requires an attached onprogress handler\n      req.onprogress = function () {};\n\n      req.send(body);\n    }\n  }, {\n    key: \"xhrRequest\",\n    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n      var _this11 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint, true);\n      req.setRequestHeader(\"Content-Type\", accept);\n      req.onerror = function () {\n        callback && callback(null);\n      };\n      req.onreadystatechange = function () {\n        if (req.readyState === _this11.states.complete && callback) {\n          var response = _this11.parseJSON(req.responseText);\n          callback(response);\n        }\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      req.send(body);\n    }\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(resp) {\n      return resp && resp !== \"\" ? JSON.parse(resp) : null;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(obj, parentKey) {\n      var queryStr = [];\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        var paramKey = parentKey ? parentKey + \"[\" + key + \"]\" : key;\n        var paramVal = obj[key];\n        if ((typeof paramVal === \"undefined\" ? \"undefined\" : _typeof(paramVal)) === \"object\") {\n          queryStr.push(this.serialize(paramVal, paramKey));\n        } else {\n          queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n        }\n      }\n      return queryStr.join(\"&\");\n    }\n  }, {\n    key: \"appendParams\",\n    value: function appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n\n      var prefix = url.match(/\\?/) ? \"&\" : \"?\";\n      return \"\" + url + prefix + this.serialize(params);\n    }\n  }]);\n\n  return Ajax;\n}();\n\nAjax.states = { complete: 4 };\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//    reconnectTimer.scheduleTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//\n\nvar Timer = function () {\n  function Timer(callback, timerCalc) {\n    _classCallCheck(this, Timer);\n\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n\n  _createClass(Timer, [{\n    key: \"reset\",\n    value: function reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n    }\n\n    // Cancels any previous scheduleTimeout and schedules callback\n\n  }, {\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var _this12 = this;\n\n      clearTimeout(this.timer);\n\n      this.timer = setTimeout(function () {\n        _this12.tries = _this12.tries + 1;\n        _this12.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }]);\n\n  return Timer;\n}();\n\n\n})(typeof(exports) === \"undefined\" ? window.Phoenix = window.Phoenix || {} : exports);\n  })();\n});","\nrequire.register(\"phoenix_html/priv/static/phoenix_html.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"phoenix_html\");\n  (function() {\n    'use strict';\n\n// Although ^=parent is not technically correct,\n// we need to use it in order to get IE8 support.\nvar elements = document.querySelectorAll('[data-submit^=parent]');\nvar len = elements.length;\n\nfor (var i = 0; i < len; ++i) {\n  elements[i].addEventListener('click', function (event) {\n    var message = this.getAttribute(\"data-confirm\");\n    if (message === null || confirm(message)) {\n      this.parentNode.submit();\n    };\n    event.preventDefault();\n    return false;\n  }, false);\n}\n\n;\n  })();\n});","\"use strict\";\n\nimport \"phoenix_html\";\nimport { Socket } from \"phoenix\";\n\nimport { EventsList } from \"./events-list\";\nimport { Board } from \"./board\";\n\nconst APP_STATE_KEY = \"ApplicationState\";\nconst DEFAULT_STATE = {\n    audio: true,\n    debug: false\n};\n\nclass App {\n    constructor() {\n        this.canvas = document.querySelector(\"#terrain\");\n\n        this.backgroundAudio = document.querySelector(\"#background-audio\");\n\n        this.startSimulation = document.querySelector(\"#start-simulation\");\n        this.stopSimulation = document.querySelector(\"#stop-simulation\");\n\n        this.state = JSON.parse(window.localStorage.getItem(APP_STATE_KEY)) || DEFAULT_STATE;\n        this.simulationState = this.canvas.getAttribute(\"data-world-simulation-started\") === \"true\";\n\n        this.events = null;\n        this.board = null;\n\n        if (this.simulationState) {\n            this.startSimulation.setAttribute(\"disabled\", true);\n            this.stopSimulation.removeAttribute(\"disabled\");\n        }\n    }\n\n    initialize() {\n        let width = parseInt(this.canvas.getAttribute(\"width\"), 10);\n        let height = parseInt(this.canvas.getAttribute(\"height\"), 10);\n\n        let margin = parseInt(this.canvas.getAttribute(\"data-world-margin\"), 10);\n\n        let eventsList = document.querySelector(\"#events-list\");\n\n        this.events = new EventsList(eventsList);\n        this.board = new Board(width, height, margin, this.canvas, () => {\n            this.connect();\n        });\n    }\n\n    stop() {\n        this.stopSimulation.setAttribute(\"disabled\", true);\n        this.startSimulation.removeAttribute(\"disabled\");\n\n        this.simulationState = false;\n    }\n\n    start() {\n        this.startSimulation.setAttribute(\"disabled\", true);\n        this.stopSimulation.removeAttribute(\"disabled\");\n\n        this.simulationState = true;\n    }\n\n    connect() {\n        let socket = new Socket(\"/communications\", { params: { token: window.userToken } });\n\n        socket.connect();\n\n        let controller = socket.channel(\"controller\", {});\n\n        controller.on(\"stop_simulation\", () => {\n            this.stop();\n        });\n\n        controller.on(\"start_simulation\", () => {\n            this.start();\n        });\n\n        controller.join().receive(\"ok\", response => {\n            console.info(\"Communication channel - attached, Response:\", response);\n\n            this.startSimulation.addEventListener(\"click\", () => {\n                this.start();\n                controller.push(\"start_simulation\");\n            });\n\n            this.stopSimulation.addEventListener(\"click\", () => {\n                this.stop();\n                controller.push(\"stop_simulation\");\n            });\n        });\n\n        let events = socket.channel(\"events\", {});\n\n        events.on(\"incoming\", payload => {\n            this.events.updateList(payload);\n            this.board.updateBoard(payload);\n\n            if (this.state.debug) {\n                console.debug(\"Event:\", payload);\n            }\n        });\n\n        events.join().receive(\"ok\", response => {\n            console.info(\"Events channel - attached, Response:\", response);\n        });\n    }\n\n    playMusic() {\n        this.backgroundAudio.muted = !this.state.audio;\n\n        this.backgroundAudio.loop = true;\n        this.backgroundAudio.play();\n\n        window.addEventListener(\"keydown\", (event) => {\n            let key = event.keyCode || event.which;\n\n            // Mute background audio via \"m\" or \"M\" key.\n\n            if (key === 77) {\n                this.state.audio = !this.state.audio;\n                this.backgroundAudio.muted = !this.state.audio;\n\n                window.localStorage.setItem(APP_STATE_KEY, JSON.stringify(this.state));\n            }\n\n            // Mute background audio via \"d\" or \"D\" key.\n\n            if (key === 68) {\n                this.state.debug = !this.state.debug;\n                window.debug = this.state.debug;\n\n                window.localStorage.setItem(APP_STATE_KEY, JSON.stringify(this.state));\n            }\n        }, false);\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let app = new App();\n\n    window.debug = app.state.debug;\n\n    app.playMusic();\n    app.initialize();\n});\n","\"use strict\";\n\nconst TILE_SIZE = 10;\n\nexport class Board {\n    constructor(width, height, margin, canvas, loadedCallback) {\n        this.width = width;\n        this.height = height;\n\n        this.worldWidth = width / TILE_SIZE;\n        this.worldHeight = height / TILE_SIZE;\n\n        this.margin = margin / TILE_SIZE / 2;\n\n        this.canvas = canvas;\n        this.context = canvas.getContext(\"2d\");\n\n        this.movement = {};\n        this.placement = [];\n        this.tiles = {\n            grass: this.loadTile(\"grass\"),\n            carrot: this.loadTile(\"carrot\"),\n            rabbit: this.loadTile(\"rabbit\"),\n            wolf: this.loadTile(\"wolf\")\n        };\n\n        this.clearBackground();\n        this.drawTerrain();\n\n        loadedCallback();\n    }\n\n    loadTile(name) {\n        return document.querySelector(`#${name}`);\n    }\n\n    clearBackground() {\n        this.context.fillStyle = \"#256D7B\";\n        this.context.fillRect(0, 0, this.width, this.height);\n    }\n\n    drawTerrain() {\n        let startingX = this.margin;\n        let startingY = this.margin;\n\n        for (let x = startingX; x < this.worldWidth - this.margin; ++x) {\n            this.placement[x - this.margin] = [];\n\n            for (let y = startingY; y < this.worldHeight - this.margin; ++y) {\n                this.placement[x - this.margin][y - this.margin] = [];\n\n                this.clear(x, y);\n            }\n        }\n    }\n\n    draw(tile, x, y) {\n        this.context.drawImage(this.tiles[tile], x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE);\n    }\n\n    clear(x, y) {\n        this.context.drawImage(this.tiles.grass, x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE);\n    }\n\n    trackMovement(id, x, y) {\n        this.movement[id] = { x, y };\n    }\n\n    untrackMovement(id) {\n        delete this.movement[id];\n    }\n\n    getLastPosition(id) {\n        return this.movement[id];\n    }\n\n    removeFromCell(x, y, id) {\n        let placement = this.placement[x - this.margin - 1][y - this.margin - 1];\n\n        if (!placement || placement.length === 0) {\n            return;\n        }\n\n        let results = placement.filter((e) => e.id !== id);\n        let overriding = null;\n\n        if (results.filter((e) => e.who === \"carrot\").length > 0) {\n            overriding = \"carrot\";\n        }\n\n        if (results.filter((e) => e.who === \"rabbit\").length > 0) {\n            overriding = \"rabbit\";\n        }\n\n        if (results.filter((e) => e.who === \"wolf\").length > 0) {\n            overriding = \"wolf\";\n        }\n\n        if (results.length === 0) {\n            this.clear(x, y);\n        } else {\n            this.draw(overriding, x, y);\n        }\n\n        this.placement[x - this.margin - 1][y - this.margin - 1] = results;\n    }\n\n    drawGhost(payload, color) {\n        this.context.globalAlpha = 0.4;\n        this.context.fillStyle = color;\n        this.context.fillRect(payload.x * TILE_SIZE, payload.y * TILE_SIZE, TILE_SIZE, TILE_SIZE);\n        this.context.globalAlpha = 1.0;\n    }\n\n    addToCell(x, y, object) {\n        this.placement[x - this.margin - 1][y - this.margin - 1].push(object);\n        this.draw(object.who, x, y);\n    }\n\n    updateBoard(payload) {\n        let result = null;\n        let lastPosition = null;\n\n        if (payload.x) {\n            payload.x += this.margin;\n        }\n\n        if (payload.y) {\n            payload.y += this.margin;\n        }\n\n        switch(payload.action) {\n            case \"planted\":\n                this.addToCell(payload.x, payload.y, { who: payload.who, id: payload.id });\n                break;\n\n            case \"born\":\n                this.addToCell(payload.x, payload.y, { who: payload.who, id: payload.id });\n                this.trackMovement(payload.id, payload.x, payload.y);\n\n                if (window.debug) {\n                    this.drawGhost(payload, \"#FFFFFF\");\n                }\n                break;\n\n            case \"move\":\n                lastPosition = this.getLastPosition(payload.id);\n\n                if (lastPosition) {\n                    this.removeFromCell(lastPosition.x, lastPosition.y, payload.id);\n                }\n\n                this.addToCell(payload.x, payload.y, { who: payload.who, id: payload.id });\n                this.trackMovement(payload.id, payload.x, payload.y);\n                break;\n\n            case \"eaten\":\n                this.removeFromCell(payload.x, payload.y, payload.id);\n\n                if (window.debug) {\n                    this.drawGhost(payload, \"#0000FF\");\n                }\n                break;\n\n            case \"died\":\n                this.removeFromCell(payload.x, payload.y, payload.id);\n\n                lastPosition = this.getLastPosition(payload.id);\n                this.removeFromCell(lastPosition.x, lastPosition.y, payload.id);\n\n                this.untrackMovement(payload.id);\n\n                if (window.debug) {\n                    this.drawGhost(payload, \"#FF0000\");\n                }\n                break;\n        }\n    }\n}\n","\"use strict\";\n\nexport class EventsList {\n    constructor(list) {\n        this.list = list;\n\n        this.references = [];\n        this.maxLength = 30;\n    }\n\n    updateList(payload) {\n        let item = document.createElement(\"li\");\n        item.appendChild(document.createTextNode(`${payload.who}, ${payload.action}`));\n\n        this.list.appendChild(item);\n        this.references.push(item);\n\n        if (this.references.length > this.maxLength) {\n            this.list.removeChild(this.references.shift());\n        }\n    }\n}\n"]}